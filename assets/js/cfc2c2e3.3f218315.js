"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[188],{7164:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var i=t(4848),o=t(8453);const r={title:"Debugging Methods"},s=void 0,l={permalink:"/my-website/blog/2024/05/29/debugging-methods",editUrl:"https://github.com/lrchljw/my-website/tree/main/blog/2024-05-29-debugging-methods.md",source:"@site/blog/2024-05-29-debugging-methods.md",title:"Debugging Methods",description:"Methods for debugging code",date:"2024-05-29T00:00:00.000Z",tags:[],readingTime:2.46,hasTruncateMarker:!0,authors:[],frontMatter:{title:"Debugging Methods"},unlisted:!1,nextItem:{title:"My first blog",permalink:"/my-website/blog/2024/05/25/my-first-blog"}},a={authorsImageUrls:[]},d=[{value:"Try in the following order",id:"try-in-the-following-order",level:2},{value:"1. Read Through the Code",id:"1-read-through-the-code",level:3},{value:"2a. Manual Simulation",id:"2a-manual-simulation",level:3},{value:"2b. Print Intermediate Results (Logging)",id:"2b-print-intermediate-results-logging",level:3},{value:"3. Step-by-Step Debugging (IDE)",id:"3-step-by-step-debugging-ide",level:3},{value:"The Best Way to Debug is to Avoid Errors",id:"the-best-way-to-debug-is-to-avoid-errors",level:2},{value:"1. Static Analysis During Coding",id:"1-static-analysis-during-coding",level:3},{value:"2. Modularization",id:"2-modularization",level:3}];function c(e){const n={admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Methods for debugging code"}),"\n",(0,i.jsx)(n.h2,{id:"try-in-the-following-order",children:"Try in the following order"}),"\n",(0,i.jsx)(n.h3,{id:"1-read-through-the-code",children:"1. Read Through the Code"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"to understand the logic"}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"Write comments when reading the code may help you understand the logic better."})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"and to find simple mistakes"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Ask yourself the following questions when reading each line of code:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Is there any typo such as write ",(0,i.jsx)(n.code,{children:"=="})," as ",(0,i.jsx)(n.code,{children:"="}),"?"]}),"\n",(0,i.jsxs)(n.li,{children:["When access ",(0,i.jsx)(n.code,{children:"array[i]"}),", is ",(0,i.jsx)(n.code,{children:"i"})," within the bounds of the array?"]}),"\n",(0,i.jsxs)(n.li,{children:["When access ",(0,i.jsx)(n.code,{children:"map[key]"}),", is ",(0,i.jsx)(n.code,{children:"key"})," present in the map?"]}),"\n",(0,i.jsx)(n.li,{children:"When increase/decrease/multiply a variable, will the value exceed the limit? (e.g. overflow) or When divide a variable, will the value be zero? (e.g. divide by zero)"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"2a-manual-simulation",children:"2a. Manual Simulation"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Simulate sample inputs and trace the code manually to check for mistakes."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"For example, to simulate the logic of the code below:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * getScore generates 6 random scores that sum up to the totalScore,\n * and ensures that each score is between 1 and 50.\n * @param {number} totalScore\n * @param {number[]} result\n * @return {number[]}\n */\nfunction getScore(totalScore, result) {\n  if (totalScore == 0) {\n    return result;\n  }\n\n  var resultLeft = 6 - result.length;\n  var scoreMax = Math.min(totalScore - (resultLeft - 1) * 1, 50);\n  var scoreMin = Math.max(totalScore - (resultLeft - 1) * 50, 1);\n\n  var randomScore = Math.ceil(Math.random() * (scoreMax - scoreMin)) + scoreMin;\n  result.push(randomScore);\n\n  return getScore(totalScore - randomScore, result);\n}\n\nconsole.log(getScore(200, []));\n"})}),"\n",(0,i.jsx)(n.p,{children:"You can use a piece of paper and a pen to write down the values of the variables and the results of each step."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csv",children:"totalScore, resultLeft, scoreMin, scoreMax, randomScore, result\n\n200,        6,          1,        50,       26,          [26]\n174,        5,          1,        50,       11,          [26, 11]\n163,        4,          13,       50,       43,          [26, 11, 43]\n120,        3,          20,       50,       32,          [26, 11, 43, 32]\n88,         2,          38,       50,       46,          [26, 11, 43, 32, 46]\n42,         1,          42,       42,       42,          [26, 11, 43, 32, 46, 42]\n\n200,        6,          1,        50,       50,          [50]\n150,        5,          1,        50,       50,          [50, 50]\n100,        4,          1,        50,       50,          [50, 50, 50]\n50,         3,          1,        48,       48,          [50, 50, 50, 48]\n2,          2,          1,        1,        1,           [50, 50, 50, 48, 1]\n1,          1,          1,        1,        1,           [50, 50, 50, 48, 1, 1]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2b-print-intermediate-results-logging",children:"2b. Print Intermediate Results (Logging)"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Insert print statements or log messages in the code to output intermediate results and track down issues."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"3-step-by-step-debugging-ide",children:"3. Step-by-Step Debugging (IDE)"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"Not recommended, unless you are debugging a complex issue with so many states that manual simulation is not feasible, and logging is too cumbersome."})}),"\n",(0,i.jsx)(n.h2,{id:"the-best-way-to-debug-is-to-avoid-errors",children:"The Best Way to Debug is to Avoid Errors"}),"\n",(0,i.jsx)(n.h3,{id:"1-static-analysis-during-coding",children:"1. Static Analysis During Coding"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Perform static analysis techniques while writing the code to identify and prevent errors early."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"2-modularization",children:"2. Modularization"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Break down the code into smaller functions and modules to make it easier to understand and locate the issue. Many bugs occurs in a single module or function."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var i=t(6540);const o={},r=i.createContext(o);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);